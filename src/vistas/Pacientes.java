/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controlador.CitaDAOImplm;
import controlador.HistorialClinicoDAOImpl;
import controlador.PacienteDAOImpl;
import controlador.SeguimientoCitaDAOImpl;
import interfaces.HistorialClinicoDAO;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import modelo.Cita;
import modelo.HistorialClinico;
import modelo.Paciente;
import modelo.SeguimientoCita;
import sistemaconsultorionutri.Dashboard;
import static vistas.NuevaCita.txtIdPaciente;
import static vistas.NuevaCita.txtNombre;

/**
 *
 * @author Yair
 */
public class Pacientes extends javax.swing.JPanel {
    
    public static String idPaciente = "";

    /**
     * Creates new form Citas
     */
    public Pacientes() {
        initComponents();
        listarPacientes();
    }
    
    public static String getIdPaciente() {
        return idPaciente;
    }
    
    public static void setIdPaciente(String idPaciente) {
        Pacientes.idPaciente = idPaciente;
    }
    
    private void listarPacientes() {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            
            List<Paciente> pacientes = new PacienteDAOImpl().listar();
            
            String[] columnas = {"ID Paciente", "Nombre", "Apellidos", "Genero"};
            modelo.setColumnIdentifiers(columnas);
            
            for (Paciente paciente : pacientes) {
                String[] renglon = {String.valueOf(paciente.getPacientId()), paciente.getNombre(),
                    paciente.getApellido(), paciente.getGenero()};
                
                modelo.addRow(renglon);
            }
            
            tablaPacientes.setModel(modelo);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPacientes = new javax.swing.JTable();
        btnHistorialClinico = new javax.swing.JButton();
        btnSeguimientoPaciente = new javax.swing.JButton();
        btnNuevopaciente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSubirHistorialClinico = new javax.swing.JButton();
        btnAgendarCita = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(788, 496));
        setPreferredSize(new java.awt.Dimension(988, 588));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tablaPacientes.setBackground(new java.awt.Color(255, 255, 255));
        tablaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaPacientes);

        btnHistorialClinico.setBackground(new java.awt.Color(0, 102, 102));
        btnHistorialClinico.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnHistorialClinico.setForeground(new java.awt.Color(255, 255, 255));
        btnHistorialClinico.setText("Historial clínico");
        btnHistorialClinico.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 15, 1, 15, new java.awt.Color(0, 0, 0)));
        btnHistorialClinico.setBorderPainted(false);
        btnHistorialClinico.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHistorialClinico.setFocusPainted(false);
        btnHistorialClinico.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnHistorialClinico.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnHistorialClinico.setIconTextGap(10);
        btnHistorialClinico.setSelected(true);
        btnHistorialClinico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistorialClinicoActionPerformed(evt);
            }
        });

        btnSeguimientoPaciente.setBackground(new java.awt.Color(0, 102, 102));
        btnSeguimientoPaciente.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnSeguimientoPaciente.setForeground(new java.awt.Color(255, 255, 255));
        btnSeguimientoPaciente.setText("Seguimiento");
        btnSeguimientoPaciente.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 15, 1, 15, new java.awt.Color(0, 0, 0)));
        btnSeguimientoPaciente.setBorderPainted(false);
        btnSeguimientoPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSeguimientoPaciente.setFocusPainted(false);
        btnSeguimientoPaciente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnSeguimientoPaciente.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnSeguimientoPaciente.setIconTextGap(10);
        btnSeguimientoPaciente.setSelected(true);
        btnSeguimientoPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeguimientoPacienteActionPerformed(evt);
            }
        });

        btnNuevopaciente.setBackground(new java.awt.Color(0, 102, 102));
        btnNuevopaciente.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnNuevopaciente.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevopaciente.setText("Nuevo paciente");
        btnNuevopaciente.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 15, 1, 15, new java.awt.Color(0, 0, 0)));
        btnNuevopaciente.setBorderPainted(false);
        btnNuevopaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevopaciente.setFocusPainted(false);
        btnNuevopaciente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnNuevopaciente.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnNuevopaciente.setIconTextGap(10);
        btnNuevopaciente.setSelected(true);
        btnNuevopaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevopacienteActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Pacientes");

        btnSubirHistorialClinico.setBackground(new java.awt.Color(0, 102, 102));
        btnSubirHistorialClinico.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnSubirHistorialClinico.setForeground(new java.awt.Color(255, 255, 255));
        btnSubirHistorialClinico.setText("Subir Historial clínico");
        btnSubirHistorialClinico.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 15, 1, 15, new java.awt.Color(0, 0, 0)));
        btnSubirHistorialClinico.setBorderPainted(false);
        btnSubirHistorialClinico.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubirHistorialClinico.setFocusPainted(false);
        btnSubirHistorialClinico.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnSubirHistorialClinico.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnSubirHistorialClinico.setIconTextGap(10);
        btnSubirHistorialClinico.setSelected(true);
        btnSubirHistorialClinico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirHistorialClinicoActionPerformed(evt);
            }
        });

        btnAgendarCita.setBackground(new java.awt.Color(0, 102, 102));
        btnAgendarCita.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnAgendarCita.setForeground(new java.awt.Color(255, 255, 255));
        btnAgendarCita.setText("Agendar cita");
        btnAgendarCita.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 15, 1, 15, new java.awt.Color(0, 0, 0)));
        btnAgendarCita.setBorderPainted(false);
        btnAgendarCita.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgendarCita.setFocusPainted(false);
        btnAgendarCita.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAgendarCita.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnAgendarCita.setIconTextGap(10);
        btnAgendarCita.setSelected(true);
        btnAgendarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgendarCitaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNuevopaciente))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSubirHistorialClinico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHistorialClinico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSeguimientoPaciente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAgendarCita)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addComponent(btnNuevopaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHistorialClinico, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSeguimientoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubirHistorialClinico, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgendarCita, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnHistorialClinicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistorialClinicoActionPerformed
        int fila = tablaPacientes.getSelectedRow();
        if (fila == -1) {
            Dashboard.mostrarMensajeAlerta("Seleccione un paciente");
            return;
        }
        
        try {
            String isPaciente = (String.valueOf(tablaPacientes.getValueAt(fila, 0)));
            
            HistorialClinicoDAO historialClinico = new HistorialClinicoDAOImpl();
            HistorialClinico historial = historialClinico.traerHistorialC(isPaciente);
            
            if (historial.getHistorialId() == 0) {
                Dashboard.mostrarMensajeError("El paciente aún no tiene un historial clínico cargado");
                return;
            }
            
            historialClinico.visualizarHistorialC(isPaciente);
            
        } catch (Exception ex) {
            Logger.getLogger(Seguimiento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnHistorialClinicoActionPerformed

    private void btnSeguimientoPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeguimientoPacienteActionPerformed
        int fila = tablaPacientes.getSelectedRow();
        if (fila == -1) {
            Dashboard.mostrarMensajeAlerta("Seleccione un paciente");
            return;
        }
        
        setIdPaciente(String.valueOf(tablaPacientes.getValueAt(fila, 0)));
        String nombreCompleto = tablaPacientes.getValueAt(fila, 1) + " " + tablaPacientes.getValueAt(fila, 2);
        
        try {
            List<SeguimientoCita> seguimientoCitas = new SeguimientoCitaDAOImpl().listar(String.valueOf(tablaPacientes.getValueAt(fila, 0)));
            if (seguimientoCitas.isEmpty()) {
                Dashboard.mostrarMensajeError("El paciente aún no tiene archivos de seguimiento");
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(Pacientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        Seguimiento s = new Seguimiento();
        Seguimiento.etiPaciente.setText("Paciente: " + nombreCompleto);
        Dashboard.showView(s);

    }//GEN-LAST:event_btnSeguimientoPacienteActionPerformed

    private void btnNuevopacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevopacienteActionPerformed
        NuevoPaciente np = new NuevoPaciente();
        Dashboard.showView(np);
    }//GEN-LAST:event_btnNuevopacienteActionPerformed

    private void btnSubirHistorialClinicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirHistorialClinicoActionPerformed
        int fila = tablaPacientes.getSelectedRow();
        if (fila == -1) {
            Dashboard.mostrarMensajeAlerta("Seleccione un paciente");
            return;
        }
        
        String idPacienteHC = String.valueOf(tablaPacientes.getValueAt(fila, 0));
        String nombreCompleto = tablaPacientes.getValueAt(fila, 1) + " " + tablaPacientes.getValueAt(fila, 2);
        
        HistorialClinicoDAO historialClinicoDAO = new HistorialClinicoDAOImpl();
        try {
            HistorialClinico historial = historialClinicoDAO.traerHistorialC(idPacienteHC);
            if (historial.getHistorialId() != 0) {
                Dashboard.mostrarMensajeError("Ya subió el historial clínico de este paciente");
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(Pacientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        SubirHistorialClinico shc = new SubirHistorialClinico();
        SubirHistorialClinico.txtIdPacienteHC.setText(idPacienteHC);
        SubirHistorialClinico.txtPacienteNombre.setText(nombreCompleto);
        Dashboard.showView(shc);
    }//GEN-LAST:event_btnSubirHistorialClinicoActionPerformed

    private void btnAgendarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgendarCitaActionPerformed
        int fila = tablaPacientes.getSelectedRow();
        if (fila == -1) {
            Dashboard.mostrarMensajeAlerta("Seleccione un paciente");
            return;
        }
        
        String idPaciente = String.valueOf(tablaPacientes.getValueAt(fila, 0));
        String nombreCompleto = tablaPacientes.getValueAt(fila, 1) + " " + tablaPacientes.getValueAt(fila, 2);
        
        try {
            List<Cita> citas = new CitaDAOImplm().listar();
            
            for (Cita cita : citas) {
                if (idPaciente.equals(String.valueOf(cita.getPacienteId())) && "Pendiente".equalsIgnoreCase(cita.getEstado())) {
                    Dashboard.mostrarMensajeAlerta("El paciente tiene una cita pendiente");
                    return;
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(Pacientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        vistas.NuevaCita nuevacita = new NuevaCita();
        txtIdPaciente.setText(idPaciente);
        txtNombre.setText(nombreCompleto);
        Dashboard.showView(nuevacita);
    }//GEN-LAST:event_btnAgendarCitaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgendarCita;
    private javax.swing.JButton btnHistorialClinico;
    private javax.swing.JButton btnNuevopaciente;
    private javax.swing.JButton btnSeguimientoPaciente;
    private javax.swing.JButton btnSubirHistorialClinico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaPacientes;
    // End of variables declaration//GEN-END:variables
}
